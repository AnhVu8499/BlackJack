{"ast":null,"code":"var _jsxFileName = \"/home/anh/BlackJack/client/src/components/Main/index.jsx\",\n    _s = $RefreshSig$();\n\nimport styles from \"./styles.module.css\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  }; // This function closes the login page and\n  // opens up the window for gameplay\n\n\n  function openGame() {\n    window.close();\n    const popup = window.open(\"http://localhost:5501/Gameplay/devApp.html\", \"Popup\", `width=2000,height=2000`);\n\n    if (popup) {\n      popup.opener = null;\n    }\n  }\n\n  const [user, setUser] = useState(null);\n  const [usersList, setUsersList] = useState([]); // Fetch user data from the server on component mount\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch('http://localhost:8080/api/profile');\n      const json = await response.json();\n\n      if (response.ok) {\n        setUser(json);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.main_container,\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: styles.navbar,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Black Jack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: styles.table,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Account Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Money\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), user.map(user => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.money\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: openGame,\n        children: \"Let's get started!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.white_btn,\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"nuv0M+pBi+Q6LfAklC1yX6mCksg=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/anh/BlackJack/client/src/components/Main/index.jsx"],"names":["styles","useState","useEffect","axios","Main","handleLogout","localStorage","removeItem","window","location","reload","openGame","close","popup","open","opener","user","setUser","usersList","setUsersList","fetchData","response","fetch","json","ok","main_container","navbar","table","map","firstName","money","white_btn"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMC,YAAY,GAAG,MAAM;AACzBC,IAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAHD,CADiB,CAMjB;AACA;;;AACA,WAASC,QAAT,GAAoB;AAClBH,IAAAA,MAAM,CAACI,KAAP;AACA,UAAMC,KAAK,GAAGL,MAAM,CAACM,IAAP,CACZ,4CADY,EAEZ,OAFY,EAGX,wBAHW,CAAd;;AAKA,QAAID,KAAJ,EAAW;AACTA,MAAAA,KAAK,CAACE,MAAN,GAAe,IAAf;AACD;AACF;;AAED,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,EAAD,CAA1C,CArBiB,CAuBjB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,SAAS,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;;AAEA,UAAIF,QAAQ,CAACG,EAAb,EAAiB;AACfP,QAAAA,OAAO,CAACM,IAAD,CAAP;AACD;AACF,KAPD;;AAQAH,IAAAA,SAAS;AACV,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAEpB,MAAM,CAACyB,cAAvB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEzB,MAAM,CAAC0B,MAAvB;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAO,MAAA,SAAS,EAAE1B,MAAM,CAAC2B,KAAzB;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,EAMCX,IAAI,CAACY,GAAL,CAASZ,IAAI,IAAI;AAChB,4BACE;AAAA,kCACE;AAAA,sBAAKA,IAAI,CAACa;AAAV;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKb,IAAI,CAACc;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAMH,OAPE,CAND;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAmBE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEnB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAnBF,eAsBE;AAAQ,MAAA,SAAS,EAAEX,MAAM,CAAC+B,SAA1B;AAAqC,MAAA,OAAO,EAAE1B,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAhED;;GAAMD,I;;KAAAA,I;AAkEN,eAAeA,IAAf","sourcesContent":["import styles from \"./styles.module.css\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Main = () => {\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  };\n\n  // This function closes the login page and\n  // opens up the window for gameplay\n  function openGame() {\n    window.close();\n    const popup = window.open(\n      \"http://localhost:5501/Gameplay/devApp.html\",\n      \"Popup\",\n      `width=2000,height=2000`\n    );\n    if (popup) {\n      popup.opener = null;\n    }\n  }\n\n  const [user, setUser] = useState(null);\n  const [usersList, setUsersList] = useState([]);\n\n  // Fetch user data from the server on component mount\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch('http://localhost:8080/api/profile')\n      const json = await response.json()\n\n      if (response.ok) {\n        setUser(json)\n      }\n    }\n    fetchData()\n  }, []); \n\n  return (\n    <div className={styles.main_container}>\n      <nav className={styles.navbar}>\n        <h1>Welcome to Black Jack</h1>\n      </nav>\n      <table className={styles.table}>\n      <h2>Account Info</h2>\n      <tr>\n        <th>Name</th>\n        <th>Money</th>\n      </tr>\n      {user.map(user => {\n        return (\n          <tr>\n            <td>{user.firstName}</td>\n            <td>{user.money}</td>\n          </tr>\n        )\n\t\t  })}\n      </table>\n      <p>\n        <button onClick={openGame}>Let's get started!</button>\n      </p>\n      <button className={styles.white_btn} onClick={handleLogout}>\n        Logout\n      </button>\n    </div>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}